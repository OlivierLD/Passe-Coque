-- Install LAMP: https://www.linuxtricks.fr/wiki/debian-installer-un-serveur-lamp-apache-mariadb-php
--
-- Doc at https://www.mysqltutorial.org/mysql-basics/mysql-auto_increment/
--        https://www.w3schools.com/php/php_mysql_create_table.asp           <- Good for mySQLi
--
-- For MySQL Data Types, see https://www.w3schools.com/mysql/mysql_datatypes.asp
--
-- TABLES, VIEWS, CONSTRAINTS
--

-- See https://drawsql.app/teams/akeu-coucou/diagrams/passecoque
-- User olivier@lediouris.net, pswd DonPedro
-- See it at https://drawsql.app/teams/akeu-coucou/diagrams/passecoque

-- On a local instance, as root:
CREATE USER 'pc' IDENTIFIED BY 'pc';
GRANT ALL PRIVILEGES ON *.* TO 'pc' WITH GRANT OPTION;
-- Then: mysql -u pc -p
CREATE DATABASE pc;
USE pc;

-- Execute script
mysql> source /path/to/script.sql
--
-- https://dev.mysql.com/doc/refman/8.0/en/getting-information.html
--
-- show tables
mysql> SHOW TABLES;
mysql> SHOW TABLES LIKE '%PC%';
-- shou user
mysql> SELECT user();
-- show database
mysql> select database();
-- drop DB
mysql> DROP DATABASE passecc128;

mysql> DESCRIBE PASSE_COQUE_MEMBERS;

-- The schema !
CREATE TABLE IF NOT EXISTS PC_NUMBERS (
    ID VARCHAR(32) PRIMARY KEY,
    AMOUNT INT DEFAULT 0,
    DESCRIPTION VARCHAR(128)
);
-- INSERT INTO PC_NUMBERS (ID, AMOUNT, DESCRIPTION) VALUES ('NB_VIEWS', 0, 'Number of views of the site');

CREATE TABLE IF NOT EXISTS PC_TRACKER (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    EVENT_DATE TIMESTAMP,
    CLIENT_IP VARCHAR(64),
    APP_CODE_NAME VARCHAR(64),
	BROWSER_NAME VARCHAR(64),
	PRODUCT VARCHAR(64),
	BROWSER_VERSION VARCHAR(64),
	BROWSER_LANGUAGE VARCHAR(64),
	PLATFORM VARCHAR(64),
	USER_AGENT VARCHAR(64),
	LATITUDE FLOAT,
    LONGITUDE FLOAT
);

-- March 9, 2024
CREATE TABLE IF NOT EXISTS PASSE_COQUE_MEMBERS (
    EMAIL VARCHAR(64) PRIMARY KEY,
    LAST_NAME VARCHAR(64) NOT NULL,
    FIRST_NAME VARCHAR(64) NOT NULL,
    TARIF VARCHAR(64),
    AMOUNT INT,
    TELEPHONE VARCHAR(32),
    FIRST_ENROLLED TIMESTAMP,
    NEWS_LETTER_OK BOOLEAN DEFAULT TRUE,
    PASSWORD VARCHAR(64),
    ADMIN_PRIVILEGES BOOLEAN DEFAULT FALSE,
    SOME_CONTENT VARCHAR(512) COMMENT 'Whatever you want goes here'
);

-- A ajouter:
-- MAJ Date FIRST_ENROLLED
-- Adresse
-- Date de naissance
-- Experience maritime, experience construction navale
ALTER TABLE PASSE_COQUE_MEMBERS RENAME COLUMN SOME_CONTENT TO SAILING_EXPERIENCE;
-- ALTER TABLE `PASSE_COQUE_MEMBERS` CHANGE `SOME_CONTENT` `SAILING_EXPERIENCE` VARCHAR(512) DEFAULT NULL COMMENT 'Sailing Experience goes here';
ALTER TABLE PASSE_COQUE_MEMBERS ADD SHIPYARD_EXPERIENCE VARCHAR(512);
ALTER TABLE PASSE_COQUE_MEMBERS ADD BIRTH_DATE DATE;
ALTER TABLE PASSE_COQUE_MEMBERS ADD ADDRESS VARCHAR(128);

-- Mai 2024
CREATE TABLE IF NOT EXISTS PASSE_COQUE_MEMBERS (
    EMAIL VARCHAR(64) PRIMARY KEY,
    LAST_NAME VARCHAR(64) NOT NULL,
    FIRST_NAME VARCHAR(64) NOT NULL,
    TARIF VARCHAR(64),
    AMOUNT INT,
    TELEPHONE VARCHAR(32),
    FIRST_ENROLLED TIMESTAMP,
    NEWS_LETTER_OK BOOLEAN DEFAULT TRUE,
    PASSWORD VARCHAR(64),
    ADMIN_PRIVILEGES BOOLEAN DEFAULT FALSE,
    SAILING_EXPERIENCE VARCHAR(512) COMMENT 'Sailing Experience goes here',
    SHIPYARD_EXPERIENCE VARCHAR(512) COMMENT 'Shipyard Experience if any',
    BIRTH_DATE DATE,
    ADDRESS VARCHAR(128) COMMENT 'With number, street, zipcode, city, etc.'
);

CREATE TABLE IF NOT EXISTS TARIFS (
    LABEL VARCHAR(32) PRIMARY KEY,
    DESCRIPTION VARCHAR(256)
);

INSERT INTO TARIFS (LABEL, DESCRIPTION) VALUES 
('Passeur d\'Écoute', 'tbd'),
('Équipier Boat Club', 'tbd'),
('Asso Partenaire', 'tbd'),
('Prospect', 'Fourre-tout. Prospect, contacts, etc.'),
('Presse', 'tbd'),
('Donateur', 'tbd'),
('Partenaire', 'tbd'),
('CA / Administration', 'The board'),
('Référent', 'tbd');

-- Update with description... 
UPDATE TARIFS SET DESCRIPTION = 'tbd' WHERE LABEL IN ('Passeur d\'Écoute', 'Équipier Boat Club', 'Asso Partenaire', 'Presse', 'Donateur', 'Partenaire', 'Référent');
UPDATE TARIFS SET DESCRIPTION = 'Fourre-tout. Prospect, contacts, etc.' WHERE LABEL = 'Prospect';
UPDATE TARIFS SET DESCRIPTION = 'The board' WHERE LABEL = 'CA / Administration';

-- Update from previous values...
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Passeur d\'Écoute' WHERE TARIF IN ('adhérent', 'Adhérent. Isseo', 'adherente', 'Felicie', 'membre', 'Membres FELICIE', 'Passeur d\'Ecoute');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Équipier Boat Club' WHERE TARIF IN ('Adhesion équipier Boat Club', 'Equipier');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Asso Partenaire' WHERE UPPER(TARIF) = 'ASSO PARTENAIRE';
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Prospect' WHERE TARIF IN ('Asso traverse', 'Avocate', 'Cap Martinique', 'Carter', 'CEEMF', 'Contact', 'Coriolan Caudard', 'coureur+VIP', 'ecole de voile', 'Createur Logo', 'GPO', 'expert ddt', 'Horn', 'Membre OGS', 'N/A', 'Sympathisant', 'Sympathisant / carter', 'Sympathisante', 'Sympathsant', 'Tombsy ex Hann');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Presse' WHERE TARIF IN ('Chasse marée', 'Voiles & Voiliers', 'Voiles mag');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Donateur' WHERE TARIF IN ('don unique', 'Donateur/membre d\'office', 'membre donateur', 'membre donateurs');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Asso Partenaire' WHERE TARIF IN ('Modkhoz asso', 'Mordhoz', 'Particpe Futur', 'Patriarch', 'Personne Morale', 'sailcoop', 'Schift Project', 'sympathisante Oczn as commo,', 'vent debout Belgique');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Partenaire' WHERE TARIF IN ('Nautipark', 'Navicom/partenaire', 'Robin Marine', 'Sellor', 'Statieur', 'technique voiles', 'Tribord');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'CA / Administration' WHERE TARIF IN ('Président', 'WebMaster');
UPDATE PASSE_COQUE_MEMBERS SET TARIF = 'Référent' WHERE TARIF IN ('Référent Félicie', 'Référents / donateurs', 'referent evasion 32', 'Referente /Kim Anne', 'referente/ passe partout', 'Skipper référent');

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME), TARIF FROM PASSE_COQUE_MEMBERS WHERE TARIF NOT IN (SELECT LABEL FROM TARIFS);

-- TO DO WHEN CLEAN: (Done on Jul 27, 2024) ' << This quote to please the syntax processor...
ALTER TABLE PASSE_COQUE_MEMBERS ADD CONSTRAINT TARIF_FK_TARIFS FOREIGN KEY (TARIF) REFERENCES TARIFS (LABEL);

CREATE TABLE IF NOT EXISTS MEMBER_FEES (
    EMAIL VARCHAR(64),
    YEAR INT,
    CONSTRAINT FEES_PK PRIMARY KEY(EMAIL, YEAR),
    CONSTRAINT FEES_FK_MEMBERS FOREIGN KEY (EMAIL) REFERENCES PASSE_COQUE_MEMBERS (EMAIL) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MEMBER_FEES (
    EMAIL VARCHAR(64),
    YEAR INT,
    CONSTRAINT FEES_PK PRIMARY KEY(EMAIL, YEAR),
    CONSTRAINT FEES_FK_MEMBERS FOREIGN KEY (EMAIL) REFERENCES PASSE_COQUE_MEMBERS (EMAIL) ON DELETE CASCADE
);

-- STR_TO_DATE('05/06/1966', '%d/%m/%Y')
CREATE TABLE IF NOT EXISTS MEMBER_FEES_2 (
    EMAIL VARCHAR(64),
    PERIOD DATE,
    AMOUNT DECIMAL,
    CONSTRAINT M_FEES_PK PRIMARY KEY(EMAIL, PERIOD),
    CONSTRAINT M_FEES_FK_MEMBERS FOREIGN KEY (EMAIL) REFERENCES PASSE_COQUE_MEMBERS (EMAIL) ON DELETE CASCADE
);

ALTER TABLE MEMBER_FEES RENAME TO MEMBER_FEES_OLD;
ALTER TABLE MEMBER_FEES_2 RENAME TO MEMBER_FEES;

CREATE VIEW MEMBERS_AND_FEES AS
SELECT PCM.FIRST_NAME, PCM.LAST_NAME, PCM.EMAIL, MF.PERIOD, MF.AMOUNT 
FROM PASSE_COQUE_MEMBERS PCM, MEMBER_FEES MF 
WHERE MF.EMAIL = PCM.EMAIL
ORDER BY 3, 4;

CREATE TABLE IF NOT EXISTS THE_FLEET (
    BOAT_NAME VARCHAR(64),      -- "Remora",
    ID VARCHAR(64) PRIMARY KEY, -- "remora",
    PIX_LOC VARCHAR(128),       -- "/images/boats/remora.sq.png",
    BOAT_TYPE VARCHAR(32),      -- "Arcachonnais",
    CATEGORY VARCHAR(16) DEFAULT 'NONE',  -- "TO_GRAB",
    BASE VARCHAR(64) -- ,           -- "Saint&#8209;Philibert"
    -- CONSTRAINT CHK_CAT CHECK (CATEGORY IN ('CLUB', 'TO_GRAB', 'EX_BOAT', 'NONE'))
);
ALTER TABLE THE_FLEET ADD CONSTRAINT CHK_CAT CHECK (CATEGORY IN ('CLUB', 'TO_GRAB', 'EX_BOAT', 'NONE'));

CREATE TABLE IF NOT EXISTS REFERENTS (
    EMAIL VARCHAR(64) NOT NULL,
    BOAT_ID VARCHAR(64) NOT NULL,
    TELEPHONE VARCHAR(32),
    CONSTRAINT REFERENTS_PK PRIMARY KEY(EMAIL, BOAT_ID),
    CONSTRAINT REFERENTS_FK_MEMBERS FOREIGN KEY (EMAIL) REFERENCES PASSE_COQUE_MEMBERS (EMAIL) ON DELETE CASCADE,
    CONSTRAINT REFERENTS_FK_BOATS FOREIGN KEY (BOAT_ID) REFERENCES THE_FLEET (ID) ON DELETE CASCADE
);

CREATE VIEW BOATS_AND_REFERENTS AS
SELECT M.EMAIL, M.FIRST_NAME, M.LAST_NAME,
       B.BOAT_NAME, B.BOAT_TYPE, B.BASE,
       R.BOAT_ID, R.TELEPHONE
FROM PASSE_COQUE_MEMBERS M,
     THE_FLEET B,
     REFERENTS R
WHERE R.BOAT_ID = B.ID AND
      R.EMAIL = M.EMAIL;       
       
CREATE TABLE BOAT_CLUB_MEMBERS (
    EMAIL VARCHAR(64) NOT NULL PRIMARY KEY,
    ENROLLED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MEMBER_LEVEL VARCHAR(16) NOT NULL DEFAULT 'CREW',
    FEE_AMOUNT FLOAT,
    LAST_FEE_UPDATE TIMESTAMP,
    CONSTRAINT BOAT_CLUB_FK_MEMBERS FOREIGN KEY (EMAIL) REFERENCES PASSE_COQUE_MEMBERS (EMAIL) ON DELETE CASCADE,
    CONSTRAINT CHK_LEVEL CHECK (MEMBER_LEVEL IN ('CREW', 'SKIPPER', 'NONE'))
);

-- https://sqlines.com/oracle-to-mysql/to_char_datetime
-- https://sqlines.com/oracle-to-mysql/to_date
-- https://www.w3schools.com/mysql/mysql_ref_functions.asp
CREATE VIEW BOAT_CLUB_DETAILS AS
SELECT M.EMAIL, M.FIRST_NAME, M.LAST_NAME, BC.MEMBER_LEVEL, DATE_FORMAT(BC.ENROLLED, '%Y-%b-%d') AS ENROLLED
FROM PASSE_COQUE_MEMBERS M, BOAT_CLUB_MEMBERS BC
WHERE M.EMAIL = BC.EMAIL;

CREATE TABLE BC_RESERVATIONS (
    EMAIL VARCHAR(64) NOT NULL COMMENT 'Reservation owner',
    BOAT_ID VARCHAR(64) NOT NULL COMMENT 'The boat',
    RESERVATION_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Reservation creation date',
    FROM_DATE TIMESTAMP NOT NULL COMMENT 'Reservation start',
    TO_DATE  TIMESTAMP NOT NULL COMMENT 'Reservation end',
    RESERVATION_STATUS VARCHAR(32) NOT NULL DEFAULT 'TENTATIVE' COMMENT 'Status in TENTATIVE, CONFIRMED, REJECTED, CANCELED, ADMIN',
    MISC_COMMENT VARCHAR(512),
    CONSTRAINT PK_RESERVATIONS PRIMARY KEY (EMAIL, BOAT_ID, RESERVATION_DATE),
    CONSTRAINT RESERVATIONS_FK_BC FOREIGN KEY (EMAIL) REFERENCES BOAT_CLUB_MEMBERS(EMAIL) ON DELETE CASCADE,
    CONSTRAINT RESERVATIONS_FK_BOAT FOREIGN KEY (BOAT_ID) REFERENCES THE_FLEET(ID) ON DELETE CASCADE,
    CONSTRAINT CHK_STATUS CHECK (RESERVATION_STATUS IN ('TENTATIVE', 'CONFIRMED', 'REJECTED', 'CANCELED', 'ADMIN'))
);

-- Generates unexplained error...
DELIMITER //
CREATE TRIGGER RES_UPDATE_CHECK BEFORE UPDATE ON BC_RESERVATIONS
FOR EACH ROW
BEGIN
    SET @found = NULL;
    SELECT COUNT(*) INTO @found
    FROM BC_RESERVATIONS
    WHERE ((NEW.FROM_DATE BETWEEN FROM_DATE AND TO_DATE) OR
           (NEW.TO_DATE BETWEEN FROM_DATE AND TO_DATE)) AND 
           BOAT_ID = NEW.BOAT_ID AND 
           RESERVATION_STATUS <> 'CANCELED'; 
    IF @found <> 0 THEN
        SET @msg = CONCAT('Reservation conflict for ', NEW.BOAT_ID);
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = @msg;
    END IF;
END;
DELIMITER ;

-- Planning: https://docs.google.com/spreadsheets/d/1G-ZFv_cHGl2JFONUT1X1HSlejV--0HRaI22su_iF3b0/edit?usp=sharing


CREATE TABLE HELP_REQUESTS (
    IDX INT AUTO_INCREMENT PRIMARY KEY,
    ORIGIN_EMAIL VARCHAR(64) NOT NULL COMMENT 'Owner',
    BOAT_ID VARCHAR(64) NOT NULL COMMENT 'The boat',
    CREATION_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Creation date',
    FROM_DATE TIMESTAMP NOT NULL COMMENT 'Start date',
    TO_DATE  TIMESTAMP COMMENT 'End date',
    HELP_TYPE VARCHAR(32) NOT NULL DEFAULT 'SAILING' COMMENT 'Type in SAILING, SHIPYARD',
    MISC_COMMENT VARCHAR(512),
    --  CONSTRAINT PK_HELP PRIMARY KEY (ORIGIN_EMAIL, IDX, BOAT_ID),
    CONSTRAINT MEMBER_FK_REQUEST FOREIGN KEY (ORIGIN_EMAIL) REFERENCES PASSE_COQUE_MEMBERS(EMAIL) ON DELETE CASCADE,
    CONSTRAINT REQUEST_FK_BOAT FOREIGN KEY (BOAT_ID) REFERENCES THE_FLEET(ID) ON DELETE CASCADE 
    -- , CONSTRAINT CHK_TYPE CHECK (HELP_TYPE IN ('SAILING', 'SHIPYARD'))
);

INSERT INTO HELP_REQUESTS (ORIGIN_EMAIL, BOAT_ID, FROM_DATE, TO_DATE, HELP_TYPE, MISC_COMMENT) VALUES
('olivier@lediouris.net', 'don-pedro', STR_TO_DATE('2024-09-08', '%Y-%m-%d'), STR_TO_DATE('2024-09-30', '%Y-%m-%d'), 'SHIPYARD', 'On a besoin de 3 personnes pour bricoler sur le bateau pendant le mois de septembre');

INSERT INTO HELP_REQUESTS (ORIGIN_EMAIL, BOAT_ID, FROM_DATE, TO_DATE, HELP_TYPE, MISC_COMMENT) VALUES
('olivier@lediouris.net', 'eh-tak', STR_TO_DATE('2024-10-08', '%Y-%m-%d'), null, 'SAILING', '2 equipiers pour convoyer Eh\'Tak de Gavres a Etel');

-- '

-- Oct 2024

CREATE TABLE IF NOT EXISTS PROJECTS (
    PROJECT_ID VARCHAR(64) PRIMARY KEY,
    PROJECT_NAME VARCHAR(64) NOT NULL,
    DESCRIPTION VARCHAR(128)
);

CREATE TABLE IF NOT EXISTS PROJECT_OWNERS (
    PROJECT_ID VARCHAR(64) NOT NULL,
    OWNER_EMAIL VARCHAR(64) NOT NULL,
    CONSTRAINT MEMBER_FK_OWNER FOREIGN KEY (OWNER_EMAIL) REFERENCES PASSE_COQUE_MEMBERS(EMAIL) ON DELETE CASCADE,
    CONSTRAINT PROJECT_FK_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID) ON DELETE CASCADE,
    CONSTRAINT PK_PRJ_OWNER PRIMARY KEY (PROJECT_ID, OWNER_EMAIL)
);

DELETE FROM PROJECTS;
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-31', 'Projet Arpèges');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-30', 'De Cap en Cap');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-29', 'Les Jeannettes');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-27', 'Fêtes Maritimes de Brest - 2024');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-28', 'Rubi\'s Cup - 2024');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-26', 'La tête à Toto');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-25', 'PHILOVENT');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-23', 'Projet HubLow');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-20', 'Projets Low-Tech');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-09', 'Entendre la mer');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-17', 'Cap Martinique');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-04', 'Projet WATTer');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-18', 'Relations avec les lycées et GRETA');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-16', 'Isse\'O');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-24', 'Super-Arlequin, Voile Magazine');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-22', 'Jolly Jumper');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-03', 'Cap Melvan');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-02', 'Voyages en Patrimoine');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-08', 'Afri\'can');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-01', 'Nav\'Solidaire');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-06', 'Association des Pompiers');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-05', 'Pordin-Nancq');
INSERT INTO PROJECTS (PROJECT_ID, PROJECT_NAME) VALUES ('tx-07', 'Objectif Grand Sud');

INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-31', 'pj.jannin@wmsmarine.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-30', 'patbenoiton@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-29', 'oindovinoelise@yahoo.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-27', 'jeff.allais@hotmail.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-28', 'admin@passe-coque.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-26', 'olivier@lediouris.net');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-25', 'olivier@lediouris.net');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-23', 'jeff.allais@hotmail.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-20', 'olivier@lediouris.net');

INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-09', 'tiagocampostc@hotmail.com');
-- INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-17', 'Cap Martinique');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-04', 'alain.hahusseau@sfr.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-04', 'yann.legrand56@icloud.com');


INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-18', 'germain.regis@orange.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-16', 'isseo.asso@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-24', 'fx.decrecy@voilemagazine.com');

INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-22', 'patrick.potiron1@orange.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-22', 'garciaalain299@gmail.com');

INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-03', 'bouan.g@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-02', 'contact@voyageenpatrimoine.fr');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-08', 'coherence.ing@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-01', 'nav.solidaire@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-06', 'mobydicks.sail@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-05', '421jimmypahun@gmail.com');
INSERT INTO PROJECT_OWNERS (PROJECT_ID, OWNER_EMAIL) VALUES ('tx-07', 'marmajour@gmail.com');

-- Nov 11, 2024

CREATE TABLE IF NOT EXISTS TODO_LISTS (
    BOAT_ID VARCHAR(64) NOT NULL COMMENT 'The Boat this line belongs to',
    LINE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Auto generated',
    LINE_DESC VARCHAR(128) NOT NULL COMMENT 'Decription',
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Creation Date',
    LINE_STATUS VARCHAR(16) NOT NULL DEFAULT 'OPENED',
    LAST_UPDATED TIMESTAMP DEFAULT NULL,
    -- CONSTRAINT TODO_PK PRIMARY KEY (BOAT_ID, LINE_ID),
    CONSTRAINT TODO_FK_BOAT FOREIGN KEY (BOAT_ID) REFERENCES THE_FLEET(ID) ON DELETE CASCADE -- ,
    -- CONSTRAINT CHK_STATUS CHECK (LINE_STATUS IN ('OPENED', 'IN_PROGRESS', 'CANCELED', 'COMPLETED'))
);
ALTER TABLE TODO_LISTS ADD CONSTRAINT TODO_PK UNIQUE KEY (BOAT_ID, LINE_ID);
ALTER TABLE TODO_LISTS ADD CONSTRAINT CHK_STATUS CHECK (LINE_STATUS IN ('OPENED', 'IN_PROGRESS', 'CANCELED', 'COMPLETED'));

-- Exemples
INSERT INTO TODO_LISTS (BOAT_ID, LINE_DESC, LINE_STATUS) VALUES ('bemol', 'Réparer l\'éclairage du compas', 'OPENED'); -- '
INSERT INTO TODO_LISTS (BOAT_ID, LINE_DESC, LINE_STATUS) VALUES ('bemol', 'Raccord eau, ponton Concarneau', 'OPENED');

-- DESC information_schema.KEY_COLUMN_USAGE
SELECT COLUMN_NAME, 
       CONSTRAINT_NAME, 
       REFERENCED_COLUMN_NAME, 
       REFERENCED_TABLE_NAME
FROM information_schema.KEY_COLUMN_USAGE
WHERE TABLE_NAME = 'THE_FLEET';

SHOW CREATE TABLE THE_FLEET;
